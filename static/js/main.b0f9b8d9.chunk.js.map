{"version":3,"sources":["components/navBar.jsx","components/common/input.jsx","components/common/form.jsx","components/loginForm.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","services/fakeGenreService.js","services/fakeMovieService.js","utils/paginate.js","components/movies.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","Input","name","label","error","children","rest","htmlFor","type","onChange","value","map","option","key","id","Form","state","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","this","Component","LoginForm","username","password","string","required","console","log","onSubmit","renderInput","renderButton","TableHeader","raiseSort","sortColumn","props","order","onSort","renderSortIcon","column","columns","onClick","TableBody","renderCell","content","_get","createKey","_id","paths","split","i","length","Table","Like","movieLiked","classes","style","border","backgroundColor","outline","padding","aria-hidden","MoviesTable","movie","title","liked","onLike","onDelete","movies","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","aria-label","page","aria-current","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","genres","genre","numberInStock","dailyRentalRate","publishDate","getMovie","find","m","deleteMovie","movieInDb","splice","indexOf","paginate","pageNumber","endIndex","startIndex","filter","_","index","Movies","selectedGenre","handleLike","handleDelete","movieId","deletedMovie","handlePageChange","handleGenreSelect","handleSort","sortArray","filtered","sort","a","b","value1","value2","getPagedData","allMovies","totalCount","g","count","MovieForm","number","min","max","match","params","history","genresAPI","Date","now","push","saveMovie","Customers","Rentals","NotFound","RegisterForm","email","App","Fragment","component","exact","from","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b0f9b8d9.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <div className=\"navbar-nav custom-align\">\n        <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n          Movies\n        </NavLink>\n        <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n          Customers\n        </NavLink>\n        <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n          Rentals\n        </NavLink>\n        <NavLink className=\"nav-item nav-link\" to=\"/login\">\n          Login\n        </NavLink>\n        <NavLink className=\"nav-item nav-link\" to=\"/register\">\n          Register\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, children, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      {rest.type === \"select\" ? (\n        <select\n          className=\"form-control\"\n          name={name}\n          label={label}\n          onChange={rest.onChange}\n          value={rest.value}\n        >\n          {children.map(option => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n      ) : (\n        <input {...rest} name={name} id={name} className=\"form-control\" />\n      )}\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Input from \"./input\";\nimport Joi from \"joi-browser\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    // if no errors then null is returned\n    // since that causes an error, alternatively we set the state to an empty object\n    this.setState(() => {\n      return { errors: errors || {} };\n    });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState(() => {\n      return { data, errors };\n    });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderInput(name, label, type = \"text\", children = null) {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        type={type}\n        error={errors[name]}\n        children={children}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = () => {\n    // Call the server\n    console.log(\"submitted\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    // when we click the second time on a path, toggle desc, otherwise revert back to asc\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\n\nclass TableBody extends Component {\n  _get(item, path) {\n    let obj = { ...item };\n    const paths = path.split(\".\");\n    for (let i = 0; i < paths.length; i++) {\n      obj = obj[paths[i]];\n    } // return found value in deep search\n    return obj;\n  }\n\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return this._get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => {\n          return (\n            <tr key={item._id}>\n              {columns.map(column => {\n                return (\n                  <td key={this.createKey(item, column)}>\n                    {this.renderCell(item, column)}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n        <tr>\n          <td></td>\n        </tr>\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Like = ({ movieLiked, onClick }) => {\n  let classes = \"fa fa-heart\";\n  if (!movieLiked) classes += \"-o\";\n  return (\n    <button\n      onClick={onClick}\n      style={{ border: 0, backgroundColor: \"#fff\", outline: 0, padding: 0 }}\n    >\n      <i className={classes} aria-hidden=\"true\"></i>\n    </button>\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./common/table\";\nimport Like from \"./common/like\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Like\n          movieLiked={movie.liked}\n          onClick={() => this.props.onLike(movie)}\n        />\n      )\n    },\n    {\n      key: \"delete\",\n      content: movie => (\n        <button\n          onClick={() => {\n            this.props.onDelete(movie._id);\n          }}\n          className=\"btn btn-danger btn-sm\"\n        >\n          Delete\n        </button>\n      )\n    }\n  ];\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  // create an array with pagenumbers\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null; // if there's only 1 page make render method return null\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages = [...pages, i];\n  }\n\n  return (\n    <nav aria-label=\"...\">\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n            aria-current=\"page\"\n          >\n            <button onClick={() => onPageChange(page)} className=\"page-link\">\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          key={item[valueProperty] || \"all genres\"}\n          onClick={() => onItemSelect(item)}\n          className={\n            selectedItem === item ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    liked: false,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    liked: false,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    liked: false,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    liked: false,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    liked: false,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    liked: false,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    liked: false,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    liked: false,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    liked: false,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie, id = \"\") {\n  let movieInDb = movies.find(m => m._id === id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g.name === movie.genre);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","export function paginate(items, pageNumber, pageSize) {\n  //filter array based on pagination\n  const endIndex = pageSize * pageNumber;\n  const startIndex = endIndex - pageSize;\n  return items.filter((_, index) => index >= startIndex && index < endIndex);\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { getMovies, deleteMovie } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  componentDidMount() {\n    const genres = [{ name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState(() => {\n      return { movies };\n    });\n  };\n\n  handleDelete = movieId => {\n    // remove movie from db\n    const deletedMovie = deleteMovie(movieId);\n    this.setState({\n      movies: this.state.movies.filter(m => m._id !== deletedMovie._id)\n    });\n  };\n\n  handlePageChange = page => {\n    this.setState(() => {\n      return {\n        currentPage: page\n      };\n    });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState(() => {\n      // always reset currentpage to 1 when selecting genres\n      return { selectedGenre: genre, currentPage: 1 };\n    });\n  };\n\n  handleSort = sortColumn => {\n    this.setState(() => {\n      return {\n        sortColumn\n      };\n    });\n  };\n\n  sortArray = (filtered, sortColumn) => {\n    // sortcolumn is an object containing path and order\n    const sorted = [...filtered].sort((a, b) => {\n      let value1 = a;\n      let value2 = b;\n\n      // to access column on item (a,b) path is passed as a string in bracket notation\n      // in case we need to access a nested object with string key, string gets split and we loop over each item till we get the right value\n      let paths = sortColumn.path.split(\".\");\n      for (let i = 0; i < paths.length; i++) {\n        value1 = value1[paths[i]];\n        value2 = value2[paths[i]];\n      }\n      if (sortColumn.order === \"asc\") {\n        if (value1 < value2) return -1;\n        if (value1 > value2) return 1;\n        return 0;\n      } else {\n        if (value1 < value2) return 1;\n        if (value1 > value2) return -1;\n        return 0;\n      }\n    });\n    return sorted;\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      movies: allMovies,\n      selectedGenre\n    } = this.state;\n\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id)\n        : allMovies;\n    // sort filtered array\n    const sorted = this.sortArray(filtered, sortColumn);\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      genres,\n      selectedGenre\n    } = this.state;\n\n    if (count === 0)\n      return <p className=\"mt-4 mb-4\">There are no movies in the database</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={genres}\n            onItemSelect={this.handleGenreSelect}\n            selectedItem={selectedGenre}\n          />\n        </div>\n        <div className=\"col\">\n          <Link to=\"/movies/new\" className=\"btn btn-primary mb-4 mt-4\">\n            New Movie\n          </Link>\n          <p className=\"mb-4\">Showing {totalCount} movies in the database</p>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { saveMovie, getMovie } from \"../services/fakeMovieService\";\nimport { Redirect } from \"react-router-dom\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genre: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    errors: {}\n  };\n\n  componentDidMount() {\n    // populate data if existing movie is edited\n    const { id } = this.props.match.params;\n    if (id && getMovie(id)) {\n      const { title, genre, numberInStock, dailyRentalRate } = getMovie(id);\n      const data = { ...this.state.data };\n      data.title = title;\n      data.genre = genre.name;\n      data.numberInStock = numberInStock;\n      data.dailyRentalRate = dailyRentalRate;\n      this.setState(() => ({ data }));\n    } else {\n      return;\n    }\n  }\n\n  schema = {\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genre: Joi.string().required(),\n    numberInStock: Joi.number().min(0),\n    dailyRentalRate: Joi.number()\n      .min(0)\n      .max(10)\n  };\n\n  doSubmit() {\n    const { history, match } = this.props;\n    const { data: movie } = this.state;\n    saveMovie(movie, match.params.id);\n    history.push(\"/movies\");\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    // check if existing movie is edited\n    if (id && !getMovie(id)) return <Redirect to=\"/not-found\" />;\n    return (\n      <div>\n        <h1>Movie Form</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderInput(\"genre\", \"Genre\", \"select\", [\n            \"\",\n            \"Action\",\n            \"Comedy\",\n            \"Thriller\"\n          ])}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React, { Component } from \"react\";\n\nclass Customers extends Component {\n  render() {\n    return <h1>Customers</h1>;\n  }\n}\n\nexport default Customers;\n","import React, { Component } from \"react\";\n\nclass Rentals extends Component {\n  render() {\n    return <h1>Rentals</h1>;\n  }\n}\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found :-(</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .email()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .min(5)\n      .required()\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit() {\n    console.log(\"registerform submitted\");\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\", \"email\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect, useParams } from \"react-router-dom\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport \"./App.css\";\nimport RegisterForm from \"./components/registerForm\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"login\" component={LoginForm}></Route>\n            <Route path=\"register\" component={RegisterForm} />\n            <Route path=\"movies/new\" component={MovieForm} />\n            <Route exact path=\"movies/:id\" component={MovieForm} />\n            <Route path=\"movies\" component={Movies} />\n            <Route path=\"customers\" component={Customers} />\n            <Route path=\"rentals\" component={Rentals} />\n            <Route path=\"not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"movies\" />\n            <Redirect to=\"not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}